import{_ as l,r as a,o as i,c as d,b as n,d as t,e as r,a as s}from"./app-1Fk5NupV.js";const o={},u=s(`<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> GIT</h1><h2 id="本地合并远程设置远程为主分支" tabindex="-1"><a class="header-anchor" href="#本地合并远程设置远程为主分支" aria-hidden="true">#</a> 本地合并远程设置远程为主分支</h2><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>git remote add origin [你的git远程地址]  // 关联远程仓库
git push -u origin master // 推送本地分支到远程仓库
git push --set-upstream origin master
git add .
git commit -m &#39;&#39;
git push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-常用命令" tabindex="-1"><a class="header-anchor" href="#git-常用命令" aria-hidden="true">#</a> Git 常用命令</h2>`,4),c=n("thead",null,[n("tr",null,[n("th",null,[n("strong",null,"命令")]),n("th",null,[n("strong",null,"功能")]),n("th",null,[n("strong",null,"格式")]),n("th",null,[n("strong",null,"参数说明")]),n("th",null,[n("strong",null,"使用实例")])])],-1),g=n("tr",null,[n("td",null,"ssh –keygen –t rsa"),n("td",null,"生成密钥"),n("td",null,"ssh –keygen –t rsa –C [email]"),n("td",null,"email：邮箱地址"),n("td",null,[t('在C盘.ssh文件夹下获取密钥文件“id_rsa.pub”ssh –keygen –t rsa –C "'),n("a",{href:"mailto:devcloud_key01@huawei.com"},"devcloud_key01@huawei.com"),t('"')])],-1),p=n("tr",null,[n("td",null,"git branch"),n("td",null,"新建分支。"),n("td",null,"git branch [new branchname]"),n("td",null,"new branchname：新的分支名"),n("td",null,"新建分支：git branch newbranch")],-1),m=n("tr",null,[n("td",null,"git branch –D"),n("td",null,"删除分支"),n("td",null,"git branch –D [new branchname]"),n("td",null,"new branchname：新的分支名"),n("td",null,"删除本地分支：git branch –D newbranch删除服务器仓库分支git branch –rd origin/newbranch同步远端已删除的分支git remote prune origin")],-1),h=n("tr",null,[n("td",null,"git add"),n("td",null,"添加文件到暂存区。"),n("td",null,"git add [filename]"),n("td",null,"filename：文件名"),n("td",null,"添加一个文件到暂缓区：git add filename添加所有修改的和新增的文件到暂缓区：git add .")],-1),v=n("tr",null,[n("td",null,"git rm"),n("td",null,"删除本地目录或文件。"),n("td",null,"git rm [filename]"),n("td",null,"filename：文件名或目录名"),n("td",null,"删除文件：git rm filename")],-1),b=n("td",null,"git clone",-1),_=n("td",null,"克隆远程仓库。",-1),k=n("td",null,"git clone [VersionAddress]",-1),f=n("td",null,"VersionAddress：版本库的网址。",-1),E=n("strong",null,"jQuery",-1),x={href:"https://github.com/jquery/jquery.git%E8%AF%A5%E5%91%BD%E4%BB%A4%E4%BC%9A%E5%9C%A8%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E7%9B%AE%E5%BD%95%EF%BC%8C%E4%B8%8E%E8%BF%9C%E7%A8%8B%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%89%88%E6%9C%AC%E5%BA%93%E5%90%8C%E5%90%8D%E3%80%82",target:"_blank",rel:"noopener noreferrer"},B=n("tr",null,[n("td",null,"git pull"),n("td",null,"把远程仓库的分支pull到本地，再与本地的指定分支合并。"),n("td",null,"git pull [RemoteHostname] [RemoteBranchname]:[LocalBranchname]"),n("td",null,"-"),n("td",null,[t("取回**“origin”"),n("strong",null,"主机的"),t("“next”"),n("strong",null,"分支，与本地的"),t("“master”**分支合并：git pull origin next:master")])],-1),y=n("tr",null,[n("td",null,"git diff"),n("td",null,"文件、分支、目录或版本的比较。"),n("td",null,"git diff"),n("td",null,"-"),n("td",null,"当前与**“master”**分支的比较：git diff master")],-1),A=n("tr",null,[n("td",null,"git commit"),n("td",null,"文件提交。"),n("td",null,"git commit"),n("td",null,"-"),n("td",null,'添加提交信息：git commit –m "commit message"')],-1),j=n("tr",null,[n("td",null,"git push"),n("td",null,"推送文件到远程仓库。"),n("td",null,"git push [RemoteHostname] [LocalBranchname] [RemoteBranchname]"),n("td",null,"-"),n("td",null,"如果省略远程分支名，则表示将本地分支推送与之存在“追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建：git push origin master上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。")],-1),w=n("tr",null,[n("td",null,"git merge"),n("td",null,"合并分支。"),n("td",null,"git merge [branch]"),n("td",null,"branch：分支名"),n("td",null,"假设当前分支为“develop”，将master主分支之后的最新提交merge到当前的develop分支上：git merge master")],-1),C=n("tr",null,[n("td",null,"git checkout"),n("td",null,"切换分支。"),n("td",null,"git checkout [branchname]"),n("td",null,"branchname：分支名"),n("td",null,"切换到master分支：git checkout master")],-1),q=n("tr",null,[n("td",null,"git log"),n("td",null,"列出日志信息。"),n("td",null,"git log"),n("td",null,"-"),n("td",null,"列出所有的log：git log –-all")],-1),H=n("tr",null,[n("td",null,"git status"),n("td",null,"查看状态输出。"),n("td",null,"git status"),n("td",null,"-"),n("td",null,"git status")],-1),D=n("tr",null,[n("td",null,"git grep"),n("td",null,"查找字符串。"),n("td",null,"git grep"),n("td",null,"-"),n("td",null,'查找是否有**“hello”**字符串：git grep "hello"')],-1),I=n("tr",null,[n("td",null,"git show"),n("td",null,"显示内容或修改的内容。"),n("td",null,"git show"),n("td",null,"-"),n("td",null,"git show v1显示**“tag v1”**的修改内容git show HEAD显示当前版本的修改文件git show HEAD^显示前一版本所有的修改文件git show HEAD~4显示前4版本的修改文件")],-1),F=n("tr",null,[n("td",null,"git stash"),n("td",null,"暂存区。"),n("td",null,"git stash"),n("td",null,"-"),n("td",null,"git stash用于保存和恢复工作进度git stash list列出暂存区的文件git stash pop取出最新的一笔，并移除git stash apply取出但不移除git stash clear清除暂存区")],-1),N=n("tr",null,[n("td",null,"git ls-files"),n("td",null,"查看文件。"),n("td",null,"git ls-files"),n("td",null,"-"),n("td",null,"git ls-files –d查看已经删除的文件git ls-files –d |xargs git checkout将已删除的文件还原")],-1),V=n("tr",null,[n("td",null,"git remote"),n("td",null,"操作远程。"),n("td",null,"git remote"),n("td",null,"-"),n("td",null,"git push origin master:newbranch增加远程仓库的分支git remote add newbranch增加远程仓库的分支git remote show列出现在远程有多少版本库git remote rm newbranch删除远程仓库的新分支git remote update更新远程所有版本的分支")],-1),G=s(`<h2 id="同时使用github-和-gitlab" tabindex="-1"><a class="header-anchor" href="#同时使用github-和-gitlab" aria-hidden="true">#</a> 同时使用GITHub 和 GitLab</h2><ol><li>设置全局账号</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">&#39;xxx&#39;</span>
git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">&#39;xxx@curefun.com&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>如果两个使用的是同一个邮箱则使用它们分别生成两个不同类型的sshKey,我这里分别生成了ed25519和rsa格式的<br> 相同类型,相同邮箱会把之前的覆盖掉</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ed25519</span>
ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t ed25519 <span class="token operator">-</span><span class="token constant">C</span> <span class="token string">&quot;your_email@example.com&quot;</span>

<span class="token comment">// 公司生成rsa</span>
ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span>b <span class="token number">2048</span> <span class="token operator">-</span><span class="token constant">C</span> <span class="token string">&quot;&lt;email&gt;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将两个key存入ssh-agent</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_ed25519
ssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p>将对应的key分别添加到github和gitlab远程配置中</p></li><li><p>本地.ssh文件夹添加配置文件config</p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Host github<span class="token punctuation">.</span>com 
    HostName ssh<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com 
    User jy381420074@<span class="token number">163</span><span class="token punctuation">.</span>com 
    PreferredAuthentications publickey 
    IdentityFile <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_ed25519 
    Port <span class="token number">443</span> 

Host git<span class="token punctuation">.</span>ftling<span class="token punctuation">.</span>com 
    HostName <span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.250</span> 
    User jy381420074@<span class="token number">163</span><span class="token punctuation">.</span>com 
    IdentityFile <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa 
    Port <span class="token number">10020</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="推送现有文件夹" tabindex="-1"><a class="header-anchor" href="#推送现有文件夹" aria-hidden="true">#</a> 推送现有文件夹</h2><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>cd existing_folder
git init --initial-branch=main
git remote add origin ssh://git@git.ftling.com:10020/mediation/ft-mediate-client.git
git add .
git commit -m &quot;Initial commit&quot;
git push -u origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="推送现有的-git-仓库" tabindex="-1"><a class="header-anchor" href="#推送现有的-git-仓库" aria-hidden="true">#</a> 推送现有的 Git 仓库</h2><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>cd existing_repo
git remote rename origin old-origin
git remote add origin ssh://git@git.ftling.com:10020/mediation/ft-mediate-client.git
git push -u origin --all
git push -u origin --tags
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function L(R,P){const e=a("ExternalLinkIcon");return i(),d("div",null,[u,n("table",null,[c,n("tbody",null,[g,p,m,h,v,n("tr",null,[b,_,k,f,n("td",null,[t("克隆"),E,t("的版本库：git clone "),n("a",x,[t("https://github.com/jquery/jquery.git该命令会在本地主机生成一个目录，与远程主机的版本库同名。"),r(e)])])]),B,y,A,j,w,C,q,H,D,I,F,N,V])]),G])}const U=l(o,[["render",L],["__file","git.html.vue"]]);export{U as default};

import{_ as n,o as s,c as a,a as e}from"./app-7ZQ6jRti.js";const p={},t=e(`<h1 id="uniapp" tabindex="-1"><a class="header-anchor" href="#uniapp" aria-hidden="true">#</a> uniapp</h1><h2 id="微信小程序样式隔离" tabindex="-1"><a class="header-anchor" href="#微信小程序样式隔离" aria-hidden="true">#</a> 微信小程序样式隔离</h2><p>组件样式隔离设置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">styleIsolation</span><span class="token operator">:</span> <span class="token string">&#39;isolated&#39;</span> <span class="token comment">// apply-shared shared</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>isolated 表示启用样式隔离，在自定义组件内外，使用 class 指定的样式将不会相互影响（一般情况下的默认值）；</li><li>apply-shared 表示页面 wxss 样式将影响到自定义组件，但自定义组件 wxss 中指定的样式不会影响页面；</li><li>shared 表示页面 wxss 样式将影响到自定义组件，自定义组件 wxss 中指定的样式也会影响页面和其他设置了 apply-shared 或 shared 的自定义组件。（这个选项在插件中不可用。）</li></ul><p>注意: 当自定义组件设置为apply-shared时, 组件内调用其他组件,当前组件内样式不能影响其他自定义组件,此时需要到页面wxss内去定义样式</p><h2 id="小程序间页面通信问题" tabindex="-1"><a class="header-anchor" href="#小程序间页面通信问题" aria-hidden="true">#</a> 小程序间页面通信问题</h2><p>微信小程序中通过 <code>getCurrentPages()</code> 获取页面栈,从而获取页面实例进行变量的修改</p><p>在uniapp 中不能这样做, 因为页面进行了编译,造成获取到的页面实例中变量名已经发生了改变, 此时若再进行修改则不会得到想要的结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// a页面</span>
<span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;www.baidu.com&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// b 页面</span>
<span class="token keyword">const</span> apage <span class="token operator">=</span> <span class="token function">getH5Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
apage<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&#39;www.asd.com&#39;</span>
<span class="token comment">// 此时的A页面中 key这个变量并不存在, 所以会重新创建这个变量</span>

<span class="token function">getH5Page</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pages <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> pages<span class="token punctuation">[</span>pages<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>uniapp 中的替代方案, 通过全局事件监听实现</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;change, &#39;</span><span class="token number">123</span>&#39;<span class="token punctuation">)</span>
uni<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="微信小程序input组件type-nickname-获取微信昵称-v-model绑定值为空" tabindex="-1"><a class="header-anchor" href="#微信小程序input组件type-nickname-获取微信昵称-v-model绑定值为空" aria-hidden="true">#</a> 微信小程序input组件type=&quot;nickname&quot;获取微信昵称，v-model绑定值为空</h2><p>解决办法:</p><blockquote><p>注意<br> vue3 setup中没有this,通过getCurrentInstance()获取当前实例<br> 查询结果是异步的,放在同步代码中要进行同步处理</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uni<span class="token punctuation">.</span><span class="token function">createSelectorQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// 注意这里要加上 in(this)  </span>
    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;#id&quot;</span><span class="token punctuation">)</span>  
    <span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  
        <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
    <span class="token punctuation">}</span><span class="token punctuation">)</span>  
    <span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
        <span class="token keyword">const</span> nickName <span class="token operator">=</span> res<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?.</span>value  
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;昵称&#39;</span><span class="token punctuation">,</span> nickName<span class="token punctuation">)</span>  
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scss添加全局变量样式文件" tabindex="-1"><a class="header-anchor" href="#scss添加全局变量样式文件" aria-hidden="true">#</a> scss添加全局变量样式文件</h2><p>新建var.scss全局样式文件</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$cyan</span></span><span class="token punctuation">:</span> #4BBCA1<span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$blue</span></span><span class="token punctuation">:</span> #2373FF<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意app.vue中引入的样式文件样式作用于全局,但是并不会在编译的时候替换开发中声明的变量 找到根目录下的uni.scss文件,在其中添加全局变量, 这样在编译的时候才会自动替换对应变量</p></blockquote><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&#39;./var.scss&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意: 全局变量在app.vue中引入的样式文件中使用时,需要使用$符号,如:</p></blockquote><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.test </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$cyan</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),c=[t];function o(i,l){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","uniapp.html.vue"]]);export{r as default};

import{_ as e,r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-ra6C9Im4.js";const i={},u=p(`<h2 id="封装vue2写法工具函数" tabindex="-1"><a class="header-anchor" href="#封装vue2写法工具函数" aria-hidden="true">#</a> 封装Vue2写法工具函数</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> basic <span class="token operator">=</span> <span class="token function">Behavior</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">$emit</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> detail<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> detail<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">set</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> wx<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">mapKeys</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> target<span class="token punctuation">,</span> map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>map<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">VantComponent</span><span class="token punctuation">(</span><span class="token parameter">vantOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">mapKeys</span><span class="token punctuation">(</span>vantOptions<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token string">&#39;properties&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token string">&#39;observers&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token string">&#39;behaviors&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token string">&#39;methods&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">beforeCreate</span><span class="token operator">:</span> <span class="token string">&#39;created&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">created</span><span class="token operator">:</span> <span class="token string">&#39;attached&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mounted</span><span class="token operator">:</span> <span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">destroyed</span><span class="token operator">:</span> <span class="token string">&#39;detached&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">classes</span><span class="token operator">:</span> <span class="token string">&#39;externalClasses&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// add default externalClasses</span>
    options<span class="token punctuation">.</span>externalClasses <span class="token operator">=</span> options<span class="token punctuation">.</span>externalClasses <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>externalClasses<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;custom-class&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// add default behaviors</span>
    options<span class="token punctuation">.</span>behaviors <span class="token operator">=</span> options<span class="token punctuation">.</span>behaviors <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>behaviors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>basic<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// add relations</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> relation <span class="token punctuation">}</span> <span class="token operator">=</span> vantOptions<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>relation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>relations <span class="token operator">=</span> relation<span class="token punctuation">.</span>relations<span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>behaviors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>relation<span class="token punctuation">.</span>mixin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// map field to form-field behavior</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vantOptions<span class="token punctuation">.</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>behaviors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;wx://form-field&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// add default options</span>
    options<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">multipleSlots</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">addGlobalClass</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">Component</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模板中使用函数" tabindex="-1"><a class="header-anchor" href="#模板中使用函数" aria-hidden="true">#</a> 模板中使用函数</h2><p>通过wxs模块，可以在wxml中直接使用js函数</p>`,4),r={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/wxs/01wxs-module.html",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"自定义组件渲染后没有组件标签和有组件标签的情况",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义组件渲染后没有组件标签和有组件标签的情况","aria-hidden":"true"},"#"),s(" 自定义组件渲染后没有组件标签和有组件标签的情况")],-1),d={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html#%E8%99%9A%E6%8B%9F%E5%8C%96%E7%BB%84%E4%BB%B6%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>默认情况下，自定义组件本身的那个节点是一个“普通”的节点，使用时可以在这个节点上设置 class style 、动画、 flex 布局等，就如同普通的 view 组件节点一样。</p><p>但有些时候，自定义组件并不希望这个节点本身可以设置样式、响应 flex 布局等，而是希望自定义组件内部的第一层节点能够响应 flex 布局或者样式由自定义组件本身完全决定。 这种情况下，可以将这个自定义组件设置为“虚拟的”</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">virtualHost</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，自定义组件节点上的 class style 和动画将不再生效，但仍可以：</p><p>将 style 定义成 properties 属性来获取 style 上设置的值；<br> 将 class 定义成 externalClasses 外部样式类使得自定义组件 wxml 可以使用 class 值。</p>`,5);function m(b,y){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[s("官方方案"),t(a)])]),k,n("p",null,[n("a",d,[s("参考"),t(a)])]),v])}const f=e(i,[["render",m],["__file","wx.html.vue"]]);export{f as default};

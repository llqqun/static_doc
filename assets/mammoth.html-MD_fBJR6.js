import{_ as p,r as e,o,c,b as n,d as s,e as t,a as l}from"./app-vL25MzAY.js";const i={},u=n("h1",{id:"mammoth源码学习以及修改",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mammoth源码学习以及修改","aria-hidden":"true"},"#"),s(" mammoth源码学习以及修改")],-1),r={href:"https://github.com/mwilliamson/mammoth.js",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),d={href:"https://github.com/llqqun/mammoth-custom",target:"_blank",rel:"noopener noreferrer"},m=l(`<p>功能:<br> 将docx文档转换为html<br> 基本原理:<br> 通过将docx转换为zip文件提取其中的document.xml, 然后将xml转换为html</p><p>源码解析xml文件在 <code>lib/doc/body-reader.js</code>, <code>xmlElementReaders</code>代码块就是默认文件解析器,可以按照需求自行添加解析方法,这里贴出p标签解析</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> xmlElementReaders <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;w:p&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">readXmlElements</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">var</span> properties <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> isParagraphProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">documents<span class="token punctuation">.</span>Paragraph</span><span class="token punctuation">(</span>
                        children<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">negate</span><span class="token punctuation">(</span>isParagraphProperties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        properties
                    <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">insertExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;w:pPr&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">readParagraphStyle</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">style</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;paragraphProperties&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">styleId</span><span class="token operator">:</span> style<span class="token punctuation">.</span>styleId<span class="token punctuation">,</span>
                    <span class="token literal-property property">styleName</span><span class="token operator">:</span> style<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                    <span class="token literal-property property">alignment</span><span class="token operator">:</span> element<span class="token punctuation">.</span><span class="token function">firstOrEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;w:jc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">&quot;w:val&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">numbering</span><span class="token operator">:</span> <span class="token function">readNumberingProperties</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>styleId<span class="token punctuation">,</span> element<span class="token punctuation">.</span><span class="token function">firstOrEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;w:numPr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> numbering<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">indent</span><span class="token operator">:</span> <span class="token function">readParagraphIndent</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">firstOrEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;w:ind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由上面的代码发现通过<code>firstOrEmpty</code>获取属性,然后通过<code>attributes</code>得到对应的值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>element<span class="token punctuation">.</span><span class="token function">firstOrEmpty</span><span class="token punctuation">(</span><span class="token string">&#39;w:jc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attributes<span class="token punctuation">[</span><span class="token string">&#39;w:val&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>如果想添加自己的样式解析，那么需要在 lib/docx/body-reader.js 添加节点的解析，获取属性，然后在 lib\\documents.js 找到对应的节点类型，添加相关的属性，这样后续的节点才能获取到对应的属性</p></blockquote>`,6);function v(b,y){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[s("官方地址"),t(a)]),k,n("a",d,[s("本人修改后地址"),t(a)])]),m])}const f=p(i,[["render",v],["__file","mammoth.html.vue"]]);export{f as default};
